{"version":3,"sources":["helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","models/mock-pokemon.ts","services/pokemon-service.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","components/loader.tsx","pages/pokemon-detail.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","pages/page-not-found.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentication-service.ts","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["formatDate","date","Date","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","pokemon","borderColor","useState","setColor","history","useHistory","className","onClick","id","push","onMouseEnter","onMouseLeave","style","src","picture","alt","name","types","map","POKEMONS","hp","cp","created","PokemonService","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","method","body","JSON","stringify","headers","index","findIndex","filter","term","includes","Object","keys","length","console","process","PokemonSearch","setTerm","setPokemons","placeholder","value","onChange","e","target","searchPokemon","handleInputChange","to","PokemonList","useEffect","getPokemons","position","bottom","right","Loader","PokemonsDetail","match","setPokemon","getPokemon","params","width","margin","PokemonForm","isEditForm","isValid","form","setForm","hasType","fieldName","fieldValue","newField","isAddForm","validateForm","newForm","startsWith","endsWith","test","isTypesValid","addPokemon","updatePokemon","onSubmit","preventDefault","log","handleSubmit","deletePokemon","htmlFor","marginBottom","checked","disabled","concat","currentType","selectType","PokemonEdit","PageNotFound","Pokemon","PokemonAdd","getTime","AuthenticationServices","username","password","isAuthenticated","setTimeout","Login","message","setMessage","AuthenticationService","login","PrivateRoute","Component","component","rest","render","props","pathname","App","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.358d195c.chunk.js","sourcesContent":["const formatDate = (date: Date = new Date()): string => {\n    return (\n      `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`\n    );\n  }\n\n  export default formatDate;","const formatType = (type: string): string => {\n    let color: string;\n   \n    switch (type) {\n      case 'Feu': \n        color = 'red lighten-1'; \n        break; \n      case 'Eau': \n        color = 'blue lighten-1'; \n        break; \n      case 'Plante': \n        color = 'green lighten-1'; \n        break; \n      case 'Insecte': \n        color = 'brown lighten-1'; \n        break; \n      case 'Normal': \n        color = 'grey lighten-3'; \n        break; \n      case 'Vol': \n        color = 'blue lighten-3'; \n        break; \n      case 'Poison': \n        color = 'deep-purple accent-1'; \n        break; \n      case 'Fée': \n        color = 'pink lighten-4'; \n        break; \n      case 'Psy': \n        color = 'deep-purple darken-2'; \n        break; \n      case 'Electrik': \n        color = 'lime accent-1'; \n        break; \n      case 'Combat': \n        color = 'deep-orange'; \n        break; \n      default: \n        color = 'grey'; \n        break; \n    }\n   \n    return `chip ${color}`;\n  }\n\n  export default formatType;","import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from 'react-router-dom';\n\ntype Props = {\n    pokemon: Pokemon;\n    borderColor?: string\n};\n\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor='#009688'}) => {\n\n    const [color, setColor] = useState<string>();\n    const history = useHistory();\n\n    const showBorder = () => {\n      setColor(borderColor);\n    }\n\n    const hideBorder = () => {\n      setColor('#f5f5f5');\n    }\n\n    const goToPokemon = (id: number) => {\n      history.push(`/pokemons/${id}`);\n    }\n\n    return (\n        <div className=\"col s6 m4\" onClick={() => goToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\n        <div className=\"card horizontal\" style={{borderColor : color}}>\n          <div className=\"card-image\"> \n            <img src={pokemon.picture} alt={pokemon.name}/>\n          </div>\n          <div className=\"card-stacked\">\n            <div className=\"card-content\">\n              <p>{pokemon.name}</p>\n              <p><small>{formatDate()}</small></p>\n              {pokemon.types.map(type => (\n                <span key={type} className={formatType(type)}>{type}</span>\n              ))}\n            </div>\n          </div>\n        </div> \n      </div>\n    );\n}\n\nexport default PokemonCard;","import Pokemon from './pokemon';\n   \nexport const POKEMONS: Pokemon[] = [\n {\n    id: 1,\n    name: \"Bulbizarre\",\n    hp: 25,\n    cp: 5,\n    picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\n    types: [\"Plante\", \"Poison\"],\n    created: new Date()\n   },\n {\n  id: 2,\n  name: \"Salamèche\",\n  hp: 28,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\n  types: [\"Feu\"],\n  created: new Date()\n },\n {\n  id: 3,\n  name: \"Carapuce\",\n  hp: 21,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\n  types: [\"Eau\"],\n  created: new Date()\n },\n {\n  id: 4,\n  name: \"Aspicot\",\n  hp: 16,\n  cp: 2,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\n  types: [\"Insecte\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 5,\n  name: \"Roucool\",\n  hp: 30,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 6,\n  name: \"Rattata\",\n  hp: 18,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 7,\n  name: \"Piafabec\",\n  hp: 14,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 8,\n  name: \"Abo\",\n  hp: 16,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\n  types: [\"Poison\"],\n  created: new Date()\n },\n {\n  id: 9,\n  name: \"Pikachu\",\n  hp: 21,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\n  types: [\"Electrik\"],\n  created: new Date()\n },\n {\n  id: 10,\n  name: \"Sabelette\",\n  hp: 19,\n  cp: 3,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 11,\n  name: \"Mélofée\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\n  types: [\"Fée\"],\n  created: new Date()\n },\n {\n  id: 12,\n  name: \"Groupix\",\n  hp: 17,\n  cp: 8,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\n  types: [\"Feu\"],\n  created: new Date()\n }\n];\n  \nexport default POKEMONS;","import Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\n  \nexport default class PokemonService {\n  \n  static pokemons:Pokemon[] = POKEMONS;\n  \n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n  \n  static getPokemons(): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch('http://localhost:3001/pokemons')\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {\n      resolve(this.pokemons);\n    });\n  }\n  \n  static getPokemon(id: number): Promise<any> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\n    }); \n  }\n  \n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    }); \n  }\n  \n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    }); \n  }\n  \n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n    pokemon.created = new Date(pokemon.created);\n  \n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: 'POST',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    }); \n  }\n  \n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n  \n  }\n  \n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n  \n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\n \nconst PokemonSearch: FunctionComponent = () => {\n  \n  const [term, setTerm] = useState<string>('');\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term);\n \n    if(term.length <= 1) {\n      setPokemons([]);\n      return;\n    }\n \n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\n  }\n  \n  return (\n    <div className=\"row\"> \n    <div className=\"col s12 m6 offset-m3\"> \n      <div className=\"card\"> \n      <div className=\"card-content\"> \n        <div className=\"input-field\"> \n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \n        </div> \n        <div className='collection'>\n        {pokemons.map((pokemon) => (\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\n            {pokemon.name}\n          </Link>\n        ))}\n        </div> \n      </div> \n      </div> \n    </div> \n    </div>\n  );\n}\n  \nexport default PokemonSearch;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport Pokemon from '../models/pokemon';\nimport PokemonCard from '../components/pokemon-card';\nimport PokemonService from '../services/pokemon-service';\nimport PokemonSearch from '../components/pokemon-search';\nimport { Link } from 'react-router-dom';\n  \nconst PokemonList: FunctionComponent = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  \n  useEffect(() => {\n    PokemonService.getPokemons().then(pokemons => setPokemons(pokemons));\n  }, []);\n  \n  return (\n    <div>\n      <h1 className=\"center\">Pokédex</h1>\n      <div className=\"container\"> \n        <div className=\"row\">\n        <PokemonSearch />\n        {pokemons.map(pokemon => (\n          <PokemonCard key={pokemon.id} pokemon={pokemon} />\n        ))}\n        </div>\n        <Link className='btn-floating btn-large waves-effect waves-light red z-depth-3'\n          style={{position: 'fixed', bottom: '25px', right: '25px'}} to='/pokemons/add'>\n            <i className='material-icons'>add</i>\n        </Link>\n      </div>\n    </div> \n  );\n}\n  \nexport default PokemonList;","import React, { FunctionComponent } from 'react';\n  \nconst Loader: FunctionComponent = () => {\n   \n  return (\n    <div className=\"preloader-wrapper big active\"> \n      <div className=\"spinner-layer spinner-blue\"> \n        <div className=\"circle-clipper left\"> \n          <div className=\"circle\"></div> \n        </div>\n        <div className=\"gap-patch\"> \n          <div className=\"circle\"></div> \n        </div><div className=\"circle-clipper right\"> \n          <div className=\"circle\"></div> \n        </div>\n      </div> \n   </div> \n  );\n}\n   \nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\nimport Loader from '../components/loader';\n  \ntype Params = { id: string };\n  \nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\"> \n            <h2 className=\"header center\">{ pokemon.name }</h2>\n            <div className=\"card hoverable\"> \n              <div className=\"card-image\">\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n                <Link to={`/pokemons/edit/${pokemon.id}`} className='btn btn-floating halfway-fab waves-effect waves-light'>\n                  <i className='material-icons'>edit</i>\n                </Link>\n              </div>\n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <table className=\"bordered striped\">\n                    <tbody>\n                      <tr> \n                        <td>Nom</td> \n                        <td><strong>{ pokemon.name }</strong></td> \n                      </tr>\n                      <tr> \n                        <td>Points de vie</td> \n                        <td><strong>{ pokemon.hp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Dégâts</td> \n                        <td><strong>{ pokemon.cp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Types</td> \n                        <td>\n                          {pokemon.types.map(type => (\n                           <span key={type} className={formatType(type)}>{type}</span>\n                          ))}</td> \n                      </tr> \n                      <tr> \n                        <td>Date de création</td> \n                        <td>{formatDate()}</td> \n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader/></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonsDetail;","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\n\ntype Props = {\n  pokemon: Pokemon,\n  isEditForm: boolean\n};\n\ntype Field = {\n    value?: any,\n    error?: string,\n    isValid?: boolean\n};\n\ntype Form = {\n  picture: Field,\n  name: Field,\n  hp: Field,\n  cp: Field,\n  types: Field\n}\n\nconst PokemonForm: FunctionComponent<Props> = ({pokemon, isEditForm}) => {\n\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    picture: { value: pokemon.picture, isValid: true },\n    name: { value: pokemon.name, isValid: true },\n    hp: { value: pokemon.hp, isValid: true },\n    cp: { value: pokemon.cp, isValid: true },\n    types: { value: pokemon.types, isValid: true }\n  });\n\n  const types: string[] = [\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n  ];\n\n  const hasType = (type: string): boolean => {\n    return form.types.value.includes(type);\n  }\n\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\n    const checked = e.target.checked;\n\n    if(checked) {\n      // Si l'utilisateur coche un type, on l'ajoute à la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.concat([type]);\n      const newField: Field = { value: newTypes };\n\n      setForm({...form, ...{ types: newField }});\n    } else {\n      // Si l'utilisateur décoche un type, on le retire à la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\n      const newField: Field = { value: newTypes };\n\n      setForm({...form, ...{ types: newField }});\n    }\n  }\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    console.log(form);\n    const isFormValid = validateForm();\n\n    if(isFormValid) {\n      pokemon.picture = form.picture.value;\n      pokemon.name = form.name.value;\n      pokemon.hp = form.hp.value;\n      pokemon.cp = form.cp.value;\n      pokemon.types = form.types.value;\n\n      isEditForm ? updatePokemon() : addPokemon();\n    }\n  }\n\n  const isAddForm = () => {\n    return !isEditForm;\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n    \n    // Validator url\n    if(isAddForm()) {\n      const start = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/';\n      const end = '.png';\n\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg: string = \"L'url n'est pas valide.\";\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\n        newForm = { ...newForm, ...{ picture: newField } };\n      } else {\n        const newField: Field = { value: form.picture.value, error: '', isValid: true };\n        newForm = { ...newForm, ...{ picture: newField } };\n      }\n    }\n\n    // Validator name\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ name: newField } };\n    } else {\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ name: newField } };\n    }\n\n    // Validator hp\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ hp: newField } };\n    } else {\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ hp: newField } };\n    }\n\n    // Validator cp\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ cp: newField } };\n    } else {\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ cp: newField } };\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  }\n\n  const isTypesValid = (type: string): boolean => {\n    // Cas n°1: Le pokémon a un seul type, qui correspond au type passé en paramètre.\n    // Dans ce cas on revoie false, car l'utilisateur ne doit pas pouvoir décoché ce type (sinon le pokémon aurait 0 type, ce qui est interdit)\n    if (form.types.value.length === 1 && hasType(type)) {\n      return false;\n    }\n    \n    // Cas n°1: Le pokémon a au moins 3 types.\n    // Dans ce cas il faut empêcher à l'utilisateur de cocher un nouveau type, mais pas de décocher les types existants.\n    if (form.types.value.length >= 3 && !hasType(type)) { \n      return false; \n    } \n    \n    // Après avoir passé les deux tests ci-dessus, on renvoie 'true', \n    // c'est-à-dire que l'on autorise l'utilisateur à cocher ou décocher un nouveau type.\n    return true;\n  }\n\n  const addPokemon = () => {\n    PokemonService.addPokemon(pokemon).then(() => history.push(`/pokemons`));\n  }\n\n  const updatePokemon = () => {\n    PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons`));\n  }\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            {isEditForm && (\n            <div className=\"card-image\">\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n              <span className='btn btn-floating halfway-fab waves-effect waves-light'>\n                <i onClick={deletePokemon} className='material-icons'>delete</i>\n              </span>\n            </div>\n            )}\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon picture */}\n                {isAddForm() && (\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Image</label>\n                  <input id=\"picture\" type=\"text\" name=\"picture\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.picture.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.picture.error} \n                  </div>} \n                </div>\n                )}\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" type=\"text\" name=\"name\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.name.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.name.error} \n                  </div>} \n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" type=\"number\" name=\"hp\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.hp.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.hp.error}\n                  </div>} \n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" type=\"number\" name=\"cp\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.cp.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.cp.error}\n                  </div>} \n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\" name=\"types\" className=\"filled-in\" value={type} checked={hasType(type)} disabled={!isTypesValid(type)} onChange={e => selectType(type, e)}></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n \nexport default PokemonForm;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\nimport Loader from '../components/loader';\n \ntype Params = { id: string };\n  \nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader/></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonEdit;","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n  \nconst PageNotFound: FunctionComponent = () => {\n  \n  return (\n    <div className=\"center\">\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\n      <h1>Hey, cette page n'existe pas !</h1> \n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\n        Retourner à l'accueil\n      </Link>\n    </div>\n  );\n}\n  \nexport default PageNotFound;","export default class Pokemon {\n    // 1. Typage des propiétés d'un pokémon.\n    id: number;\n    hp: number;\n    cp: number;\n    name: string;\n    picture: string;\n    types: Array<string>;\n    created: Date;\n     \n    // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\n    constructor(\n     id: number,\n     hp: number = 100,\n     cp: number = 10,\n     name: string = '...',\n     picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png',\n     types: Array<string> = ['Normal'],\n     created: Date = new Date()\n    ) {\n     // 3. Initialisation des propiétés d'un pokémons.\n     this.id = id;\n     this.hp = hp;\n     this.cp = cp;\n     this.name = name;\n     this.picture = picture;\n     this.types = types;\n     this.created = created;\n    }\n   }","import React, { FunctionComponent, useState } from 'react';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\n\nconst PokemonAdd: FunctionComponent = () => {\n    const [id] = useState<number>(new Date().getTime());\n    const [pokemon] = useState<Pokemon>(new Pokemon(id));\n\n    return (\n        <div className=\"row\">\n            <h2 className=\"header center\">Ajouter un pokemon</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\n        </div>\n    );\n}\n\nexport default PokemonAdd;","export default class AuthenticationServices {\n    static isAuthenticated: boolean = false;\n\n    static login(username: string, password: string): Promise<boolean> {\n        const isAuthenticated = (username === 'pikachu' && password === 'pikachu');\n\n        return new Promise(resolve => {\n            setTimeout(() => {\n                this.isAuthenticated = isAuthenticated;\n                resolve(isAuthenticated);\n            }, 1000);\n        });\n    }\n}","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-service';\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  username: Field,\n  password: Field\n}\n\nconst Login: FunctionComponent = () => {\n\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '' },\n    password: { value: '' },\n  });\n\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (pikachu / pikachu)');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator username\n    if(form.username.value.length < 3) {\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ username: newField } };\n    } else {\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ username: newField } };\n    }\n\n    // Validator password\n    if(form.password.value.length < 6) {\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.username.isValid && newForm.password.isValid;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      setMessage('👉 Tentative de connexion en cours ...');\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\n        if(!isAuthenticated) {\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\n          return;\n        }\n        \n        history.push('/pokemons');\n        \n      });\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Form message */}\n                {message && <div className=\"form-group\">\n                  <div className=\"card-panel grey lighten-5\">\n                    {message}\n                  </div>\n                </div>}\n                {/* Field username */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Identifiant</label>\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.username.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.username.error} \n                  </div>} \n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.password.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.password.error} \n                  </div>} \n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n \nexport default Login;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from './services/authentication-service';\n  \nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\n  <Route {...rest} render={(props) => {\n    const isAuthenticated = AuthenticationService.isAuthenticated;\n    if (!isAuthenticated) {    \n      return <Redirect to={{ pathname: '/login' }} />\n    }\n  \n    return <Component {...props} />\n  }} />\n);\n  \nexport default PrivateRoute;","import React, { FunctionComponent} from 'react';\nimport PokemonList from './pages/pokemon-list';\nimport PokemonsDetail from './pages/pokemon-detail';\nimport PokemonEdit from './pages/pokemon-edit';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport PageNotFound from './pages/page-not-found';\nimport PokemonAdd from './pages/pokemon-add';\nimport Login from './pages/login';\nimport PrivateRoute from './PrivateRoute';\n\nconst App: FunctionComponent = () => {\n\n    return (\n        <Router>\n            <div>\n                <nav>\n                    <div className='nav-wrapper teal'>\n                        <Link to='/' className='brand-logo center'>Pokedex</Link>\n                    </div>\n                </nav>\n                <Switch>\n                    <PrivateRoute exact path='/' component={PokemonList} />\n                    <Route exact path='/login' component={Login} />\n                    <PrivateRoute exact path='/pokemons' component={PokemonList} />\n                    <PrivateRoute exact path='/pokemons/add' component={PokemonAdd} />\n                    <PrivateRoute exact path='/pokemons/edit/:id' component={PokemonEdit} />\n                    <PrivateRoute path='/pokemons/:id' component={PokemonsDetail} />\n                    <Route component={PageNotFound} />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}